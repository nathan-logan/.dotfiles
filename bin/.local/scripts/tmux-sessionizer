#!/usr/bin/env bash

# directories where their child directories are individual projects
workspaces=(
    "$HOME/workspace/nathan-logan"
    "$HOME/workspace/nathan-logan/grapevine"
    "$HOME/workspace/struolabs"
    "$HOME/workspace/picklebet"
)

# these are projects that should be shown in the list, but not their child directories
projects=(
    "$HOME/workspace/picklebet/skrilla/client/site"
    "$HOME/workspace/nathan-logan/grapevine/web/apps/admin"
    "$HOME/workspace/nathan-logan/grapevine/web/apps/portal"
    "$HOME/workspace/nathan-logan/grapevine/web/packages/ui"
    "$HOME/.config/nvim"
)

if [[ $# -eq 1 ]]; then
    selected=$1
else
    directories=()

    # populate direct project directories first
    for project in "${projects[@]}"; do
        # since this is a direct link to a project folder, we should check if it exists
        if test -d $project; then
            directories+=("$project")
        fi
    done

    for workspace in "${workspaces[@]}"; do
        # check if the workspace directory exists
        if test -d $workspace; then
            directories+=("$(find "${workspace}" -mindepth 1 -maxdepth 1 -type d)")
        fi
    done

    selected=$(printf "%s\n" "${directories[@]}" | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s $selected_name -c $selected
    exit 0
fi

if ! tmux has-session -t=$selected_name 2>/dev/null; then
    tmux new-session -ds $selected_name -c $selected
fi

if [[ -z $TMUX ]]; then
    tmux attach -t $selected_name
else
    tmux switch-client -t $selected_name
fi
